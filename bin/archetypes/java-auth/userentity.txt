./src/main/java/com/<_name_>/user/UserEntity.java
package com.<_name_>.user;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name="User")
@NamedNativeQueries({
	@NamedNativeQuery(name="getUser", query="SELECT * FROM User WHERE userName=?", resultClass=UserEntity.class),
	@NamedNativeQuery(name="getAllUsers", query="SELECT * FROM User", resultClass=UserEntity.class)
})
public class UserEntity {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name="userId")
	private int userId;

	@NotNull
	@Column(name="userName", unique=true)
	private String userName;

	@NotNull
	@Column(name="password")
	private String password;

	@NotNull
	@Column(name="role")
	private String role;

	@NotNull
	@Column(name="email")
	private String email;

	@NotNull
	@Column(name="salt")
	private String salt;

	@Transient
	private String token;

	public void setToken(String token) {
		this.token = token;
	}

	public String getToken() {
		return token;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	public int getUserId() {
		return userId;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public String getUserName() {
		return userName;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getPassword() {
		return password;
	}

	public void setRole(String role) {
		this.role = role;
	}

	public String getRole() {
		return role;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getEmail() {
		return email;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@JsonIgnore
	public String getSalt() {
		return salt;
	}


}
